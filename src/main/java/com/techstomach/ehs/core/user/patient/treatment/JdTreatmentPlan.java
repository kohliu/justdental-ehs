//package com.techstomach.ehs.core;
//
//import java.io.Serializable;
//import java.util.Collections;
//import java.util.Date;
//import java.util.Map;
//import java.util.WeakHashMap;
//import javax.persistence.Basic;
//import javax.persistence.CascadeType;
//import javax.persistence.Column;
//import javax.persistence.Entity;
//import javax.persistence.FetchType;
//import javax.persistence.GeneratedValue;
//import javax.persistence.GenerationType;
//import javax.persistence.Id;
//import javax.persistence.JoinColumn;
//import javax.persistence.ManyToOne;
//import javax.persistence.Table;
//import javax.persistence.Transient;
//import org.hibernate.proxy.HibernateProxy;
//
//
///**
// * Object mapping for hibernate-handled table: jd_treatment_plan.
// * @author autogenerated
// */
//
//@Entity
//@Table(name = "jd_treatment_plan", catalog = "jdehs_dev")
//public class JdTreatmentPlan implements Cloneable, Serializable{
//
//	/** Serial Version UID. */
//	private static final long serialVersionUID = -559033250L;
//
//	/** Use a WeakHashMap so entries will be garbage collected once all entities
//		referring to a saved hash are garbage collected themselves. */
//	private static final Map<Serializable, Long> SAVED_HASHES =
//		Collections.synchronizedMap(new WeakHashMap<Serializable, Long>());
//
//	/** hashCode temporary storage. */
//	private volatile Long hashCode;
//
//
//	/** Field mapping. */
//	private Long appointmentidFk;
//	/** Field mapping. */
//	private Long clinicidFk;
//	/** Field mapping. */
//	private Date creationdate;
//	/** Field mapping. */
//	private String description;
//	/** Field mapping. */
//	private Long id = 0L; // init for hibernate bug workaround
//	/** Field mapping. */
//	private String modifiedby;
//	/** Field mapping. */
//	private Date modifieddate;
//	/** Field mapping. */
//	private String treatmentarray;
//	/** Field mapping. */
//	private JdUser useridFk;
//	/** Field mapping. */
//	private Date validfrom;
//	/** Field mapping. */
//	private Date validto;
//	/**
//	 * Default constructor, mainly for hibernate use.
//	 */
//	public JdTreatmentPlan() {
//		// Default constructor
//	}
//
//	/** Constructor taking a given ID.
//	 * @param id to set
//	 */
//	public JdTreatmentPlan(Long id) {
//		this.id = id;
//	}
//
//	/** Constructor taking a given ID.
//	 * @param id Long object;
//	 * @param modifiedby String object;
//	 * @param useridFk JdUser object;
//	 */
//	public JdTreatmentPlan(Long id, String modifiedby, JdUser useridFk) {
//
//		this.id = id;
//		this.modifiedby = modifiedby;
//		this.useridFk = useridFk;
//	}
//
//
//
//
//
//	/** Return the type of this class. Useful for when dealing with proxies.
//	* @return Defining class.
//	*/
//	@Transient
//	public Class<?> getClassType() {
//		return JdTreatmentPlan.class;
//	}
//
//
//    /**
//     * Return the value associated with the column: appointmentidFk.
//	 * @return A Long object (this.appointmentidFk)
//	 */
//	@Basic( optional = true )
//	@Column( name = "appointmentid_fk"  )
//	public Long getAppointmentidFk() {
//		return this.appointmentidFk;
//
//	}
//
//
//
//    /**
//     * Set the value related to the column: appointmentidFk.
//	 * @param appointmentidFk the appointmentidFk value you wish to set
//	 */
//	public void setAppointmentidFk(final Long appointmentidFk) {
//		this.appointmentidFk = appointmentidFk;
//	}
//
//    /**
//     * Return the value associated with the column: clinicidFk.
//	 * @return A Long object (this.clinicidFk)
//	 */
//	@Basic( optional = true )
//	@Column( name = "clinicid_fk"  )
//	public Long getClinicidFk() {
//		return this.clinicidFk;
//
//	}
//
//
//
//    /**
//     * Set the value related to the column: clinicidFk.
//	 * @param clinicidFk the clinicidFk value you wish to set
//	 */
//	public void setClinicidFk(final Long clinicidFk) {
//		this.clinicidFk = clinicidFk;
//	}
//
//    /**
//     * Return the value associated with the column: creationdate.
//	 * @return A Date object (this.creationdate)
//	 */
//	public Date getCreationdate() {
//		return this.creationdate;
//
//	}
//
//
//
//    /**
//     * Set the value related to the column: creationdate.
//	 * @param creationdate the creationdate value you wish to set
//	 */
//	public void setCreationdate(final Date creationdate) {
//		this.creationdate = creationdate;
//	}
//
//    /**
//     * Return the value associated with the column: description.
//	 * @return A String object (this.description)
//	 */
//	@Basic( optional = true )
//	@Column( length = 715827882  )
//	public String getDescription() {
//		return this.description;
//
//	}
//
//
//
//    /**
//     * Set the value related to the column: description.
//	 * @param description the description value you wish to set
//	 */
//	public void setDescription(final String description) {
//		this.description = description;
//	}
//
//    /**
//     * Return the value associated with the column: id.
//	 * @return A Long object (this.id)
//	 */
//    @Id
//	@GeneratedValue(strategy = GenerationType.AUTO)
//	@Basic( optional = false )
//	@Column( name = "tratmentid", nullable = false  )
//	public Long getId() {
//		return this.id;
//
//	}
//
//
//
//    /**
//     * Set the value related to the column: id.
//	 * @param id the id value you wish to set
//	 */
//	public void setId(final Long id) {
//		// If we've just been persisted and hashCode has been
//		// returned then make sure other entities with this
//		// ID return the already returned hash code
//		if ( (this.id == null || this.id == 0L) &&
//				(id != null) &&
//				(this.hashCode != null) ) {
//		SAVED_HASHES.put( id, this.hashCode );
//		}
//		this.id = id;
//	}
//
//    /**
//     * Return the value associated with the column: modifiedby.
//	 * @return A String object (this.modifiedby)
//	 */
//	@Basic( optional = false )
//	@Column( nullable = false, length = 255  )
//	public String getModifiedby() {
//		return this.modifiedby;
//
//	}
//
//
//
//    /**
//     * Set the value related to the column: modifiedby.
//	 * @param modifiedby the modifiedby value you wish to set
//	 */
//	public void setModifiedby(final String modifiedby) {
//		this.modifiedby = modifiedby;
//	}
//
//    /**
//     * Return the value associated with the column: modifieddate.
//	 * @return A Date object (this.modifieddate)
//	 */
//	public Date getModifieddate() {
//		return this.modifieddate;
//
//	}
//
//
//
//    /**
//     * Set the value related to the column: modifieddate.
//	 * @param modifieddate the modifieddate value you wish to set
//	 */
//	public void setModifieddate(final Date modifieddate) {
//		this.modifieddate = modifieddate;
//	}
//
//    /**
//     * Return the value associated with the column: treatmentarray.
//	 * @return A String object (this.treatmentarray)
//	 */
//	@Basic( optional = true )
//	@Column( length = 715827882  )
//	public String getTreatmentarray() {
//		return this.treatmentarray;
//
//	}
//
//
//
//    /**
//     * Set the value related to the column: treatmentarray.
//	 * @param treatmentarray the treatmentarray value you wish to set
//	 */
//	public void setTreatmentarray(final String treatmentarray) {
//		this.treatmentarray = treatmentarray;
//	}
//
//    /**
//     * Return the value associated with the column: useridFk.
//	 * @return A JdUser object (this.useridFk)
//	 */
//	@ManyToOne( cascade = { CascadeType.PERSIST, CascadeType.MERGE }, fetch = FetchType.LAZY )
//	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
//	@Basic( optional = false )
//	@JoinColumn(name = "userId_fk", nullable = false )
//	public JdUser getUseridFk() {
//		return this.useridFk;
//
//	}
//
//
//
//    /**
//     * Set the value related to the column: useridFk.
//	 * @param useridFk the useridFk value you wish to set
//	 */
//	public void setUseridFk(final JdUser useridFk) {
//		this.useridFk = useridFk;
//	}
//
//    /**
//     * Return the value associated with the column: validfrom.
//	 * @return A Date object (this.validfrom)
//	 */
//	public Date getValidfrom() {
//		return this.validfrom;
//
//	}
//
//
//
//    /**
//     * Set the value related to the column: validfrom.
//	 * @param validfrom the validfrom value you wish to set
//	 */
//	public void setValidfrom(final Date validfrom) {
//		this.validfrom = validfrom;
//	}
//
//    /**
//     * Return the value associated with the column: validto.
//	 * @return A Date object (this.validto)
//	 */
//	public Date getValidto() {
//		return this.validto;
//
//	}
//
//
//
//    /**
//     * Set the value related to the column: validto.
//	 * @param validto the validto value you wish to set
//	 */
//	public void setValidto(final Date validto) {
//		this.validto = validto;
//	}
//
//
//   /**
//    * Deep copy.
//	* @return cloned object
//	* @throws CloneNotSupportedException on error
//    */
//    @Override
//    public JdTreatmentPlan clone() throws CloneNotSupportedException {
//
//        final JdTreatmentPlan copy = (JdTreatmentPlan)super.clone();
//
//		copy.setAppointmentidFk(this.getAppointmentidFk());
//		copy.setClinicidFk(this.getClinicidFk());
//		copy.setCreationdate(this.getCreationdate());
//		copy.setDescription(this.getDescription());
//		copy.setId(this.getId());
//		copy.setModifiedby(this.getModifiedby());
//		copy.setModifieddate(this.getModifieddate());
//		copy.setTreatmentarray(this.getTreatmentarray());
//		copy.setUseridFk(this.getUseridFk());
//		copy.setValidfrom(this.getValidfrom());
//		copy.setValidto(this.getValidto());
//		return copy;
//	}
//
//
//
//	/** Provides toString implementation.
//	 * @see Object#toString()
//	 * @return String representation of this class.
//	 */
//	@Override
//	public String toString() {
//		StringBuffer sb = new StringBuffer();
//
//		sb.append("appointmentidFk: " + this.getAppointmentidFk() + ", ");
//		sb.append("clinicidFk: " + this.getClinicidFk() + ", ");
//		sb.append("creationdate: " + this.getCreationdate() + ", ");
//		sb.append("description: " + this.getDescription() + ", ");
//		sb.append("id: " + this.getId() + ", ");
//		sb.append("modifiedby: " + this.getModifiedby() + ", ");
//		sb.append("modifieddate: " + this.getModifieddate() + ", ");
//		sb.append("treatmentarray: " + this.getTreatmentarray() + ", ");
//		sb.append("validfrom: " + this.getValidfrom() + ", ");
//		sb.append("validto: " + this.getValidto());
//		return sb.toString();
//	}
//
//
//	/** Equals implementation.
//	 * @see Object#equals(Object)
//	 * @param aThat Object to compare with
//	 * @return true/false
//	 */
//	@Override
//	public boolean equals(final Object aThat) {
//		Object proxyThat = aThat;
//
//		if ( this == aThat ) {
//			 return true;
//		}
//
//
//		if (aThat instanceof HibernateProxy) {
// 			// narrow down the proxy to the class we are dealing with.
// 			try {
//				proxyThat = ((HibernateProxy) aThat).getHibernateLazyInitializer().getImplementation();
//			} catch (org.hibernate.ObjectNotFoundException e) {
//				return false;
//		   	}
//		}
//		if (aThat == null)  {
//			 return false;
//		}
//
//		final JdTreatmentPlan that;
//		try {
//			that = (JdTreatmentPlan) proxyThat;
//			if ( !(that.getClassType().equals(this.getClassType()))){
//				return false;
//			}
//		} catch (org.hibernate.ObjectNotFoundException e) {
//				return false;
//		} catch (ClassCastException e) {
//				return false;
//		}
//
//
//		boolean result = true;
//		result = result && (((this.getId() == null) && ( that.getId() == null)) || (this.getId() != null  && this.getId().equals(that.getId())));
//		result = result && (((getAppointmentidFk() == null) && (that.getAppointmentidFk() == null)) || (getAppointmentidFk() != null && getAppointmentidFk().equals(that.getAppointmentidFk())));
//		result = result && (((getClinicidFk() == null) && (that.getClinicidFk() == null)) || (getClinicidFk() != null && getClinicidFk().equals(that.getClinicidFk())));
//		result = result && (((getCreationdate() == null) && (that.getCreationdate() == null)) || (getCreationdate() != null && getCreationdate().equals(that.getCreationdate())));
//		result = result && (((getDescription() == null) && (that.getDescription() == null)) || (getDescription() != null && getDescription().equals(that.getDescription())));
//		result = result && (((getModifiedby() == null) && (that.getModifiedby() == null)) || (getModifiedby() != null && getModifiedby().equals(that.getModifiedby())));
//		result = result && (((getModifieddate() == null) && (that.getModifieddate() == null)) || (getModifieddate() != null && getModifieddate().equals(that.getModifieddate())));
//		result = result && (((getTreatmentarray() == null) && (that.getTreatmentarray() == null)) || (getTreatmentarray() != null && getTreatmentarray().equals(that.getTreatmentarray())));
//		result = result && (((getUseridFk() == null) && (that.getUseridFk() == null)) || (getUseridFk() != null && getUseridFk().getId().equals(that.getUseridFk().getId())));
//		result = result && (((getValidfrom() == null) && (that.getValidfrom() == null)) || (getValidfrom() != null && getValidfrom().equals(that.getValidfrom())));
//		result = result && (((getValidto() == null) && (that.getValidto() == null)) || (getValidto() != null && getValidto().equals(that.getValidto())));
//		return result;
//	}
//
//	/** Calculate the hashcode.
//	 * @see Object#hashCode()
//	 * @return a calculated number
//	 */
//	@Override
//	public int hashCode() {
//		if ( this.hashCode == null ) {
//			synchronized ( this ) {
//				if ( this.hashCode == null ) {
//					Long newHashCode = null;
//
//					if ( getId() != null ) {
//					newHashCode = SAVED_HASHES.get( getId() );
//					}
//
//					if ( newHashCode == null ) {
//						if ( getId() != null && getId() != 0L) {
//							newHashCode = getId();
//						} else {
//							newHashCode = (long) super.hashCode();
//
//						}
//					}
//
//					this.hashCode = newHashCode;
//				}
//			}
//		}
//		return (int) (this.hashCode & 0xffffff);
//	}
//
//
//
//}
